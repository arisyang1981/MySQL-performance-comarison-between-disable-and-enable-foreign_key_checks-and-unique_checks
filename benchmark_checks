drop table test_isolation1;
drop table test_isolation2;
drop table test_isolation3;
drop table test_isolation4;
create table benchmark1(id int auto_increment, entry_datetime datetime(3), primary key(id));
create table benchmark2(id int auto_increment, entry_datetime datetime(3), primary key(id));
create table benchmark3(id int auto_increment, entry_datetime datetime(3), primary key(id));
create table benchmark4(id int auto_increment, entry_datetime datetime(3), primary key(id));

DROP PROCEDURE IF EXISTS p_checks_benchmark;
DELIMITER $$ 
CREATE PROCEDURE p_checks_benchmark( in totalnumber int)
BEGIN
      SET @a = 0;
      simple_loop: LOOP
         SET @a=@a+1;
         insert into benchmark1 (entry_datetime) values (now(3));
         insert into benchmark2 (entry_datetime) values (now(3));
         insert into benchmark3 (entry_datetime) values (now(3));
         insert into benchmark4 (entry_datetime) values (now(3));
         IF @a=totalnumber THEN
            LEAVE simple_loop;
         END IF;
   END LOOP simple_loop;
END $$
DELIMITER ;

Bash:
#!/usr/bin/env bash

call_p_benchmark()

{
loop=$1
mysql xxx <<+
call p_checks_benchmark(${loop});
+
}

run_benchmark()
{
loop=$1
#Initialize tables and procedure
mysql xxx < init.sql

for i in $(seq 1 3)
do
time call_p_benchmark ${loop} &
done
time call_p_benchmark ${loop}
sleep 10
}

##Start
loop=$1
mysql xxx <<+
select @@global.transaction_isolation;
+

for j in $(seq 1 100)
do
mysql xxx <<+
set global foreign_key_checks=1;
select @@global.foreign_key_checks;
set global unique_checks=1;
select @@global.unique_checks;
+
(run_benchmark ${loop}) >> defaults.${loop}.log 2>&1

mysql xxx <<+
set global foreign_key_checks=0;
select @@global.foreign_key_checks;
+
(run_benchmark ${loop}) >> foreign_off.${loop}.log 2>&1

mysql <<+
set global unique_checks=0;
select @@global.unique_checks;
+
(run_benchmark ${loop}) >> foreign_unique_off.${loop}.log 2>&1
done
